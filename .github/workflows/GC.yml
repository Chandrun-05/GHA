name: Trigger Opsera GitCustodian Scan and Report to GitHub

on:
  workflow_dispatch:
  pull_request:

jobs:
  trigger-opsera-scan:
    runs-on: ubuntu-latest
    outputs:
      run_count: ${{ steps.trigger_scan.outputs.run_count }}
    steps:
      - name: Trigger GitCustodian Scan in Opsera
        id: trigger_scan
        run: |
          response=$(curl -s -X POST "https://app.opsera.io/api/v1/pipeline/run" \
            -H "Authorization: Bearer ${{ secrets.OPSERA_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"pipelineId": "68232d25a85372e8342b3100"}')

          echo "Pipeline Response: $response"

          if echo "$response" | jq . >/dev/null 2>&1; then
            run_count=$(echo "$response" | jq -r '.runCount')
            echo "run_count=$run_count" >> $GITHUB_OUTPUT
          else
            echo "Error: Invalid JSON response. Exiting." >&2
            exit 1
          fi

  fetch-opsera-logs:
    needs: trigger-opsera-scan
    runs-on: ubuntu-latest
    outputs:
      logs: ${{ steps.fetch_logs.outputs.logs }}
    steps:
      - name: Fetch Opsera Scan Logs
        id: fetch_logs
        run: |
          run_count="${{ needs.trigger-opsera-scan.outputs.run_count }}"
          response=$(curl -s -X POST "https://app.opsera.io/api/v1/pipeline/logs" \
            -H "Authorization: Bearer ${{ secrets.OPSERA_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"pipelineId\": \"68232d25a85372e8342b3100\", \"runCount\": \"$run_count\"}")
          
          echo "Log Response: $response"

          if echo "$response" | jq . >/dev/null 2>&1; then
            logs=$(echo "$response" | jq -c '. // []')
            echo "logs=$logs" >> $GITHUB_OUTPUT
          else
            echo "Error: Unable to fetch logs. Exiting." >&2
            exit 1
          fi

  report-scan-result:
    needs: fetch-opsera-logs
    runs-on: ubuntu-latest
    steps:
      - name: Generate Scan Report
        run: |
          logs='${{ needs.fetch-opsera-logs.outputs.logs }}'

          echo "### GitCustodian Scan Report" > scan-report.md
          echo "Pipeline ID: $GITHUB_RUN_ID" >> scan-report.md
          echo "Scan Status: Completed" >> scan-report.md
          echo "" >> scan-report.md
          echo "#### Pipeline Events:" >> scan-report.md

          echo "$logs" | jq -r '.[] | 
            "- Message: \(.message // "N/A")
               Status: \(.status // "N/A")
               Timestamp: \(.createdAt // "N/A")
               Commit ID: \(.step_configuration.plan[0].tool.configuration.gitCommitId // "N/A")"' >> scan-report.md

          echo "" >> scan-report.md
          echo "#### End of Report" >> scan-report.md

      - name: Commit the Scan Report
        run: |
          git config --global user.name "Chandrun-05"
          git config --global user.email "chandru.nallasivam@opsera.io"
          git fetch origin
          git checkout ${{ github.head_ref || github.ref_name }}
          git pull
          git add scan-report.md
          git commit -m "Add GitCustodian scan report" || echo "No changes to commit"
          git push

  comment-scan-result:
    if: github.event_name == 'pull_request'
    needs: fetch-opsera-logs
    runs-on: ubuntu-latest
    steps:
      - name: Comment on GitHub Pull Request
        run: |
          logs='${{ needs.fetch-opsera-logs.outputs.logs }}'
          comment="### üõ°Ô∏è GitCustodian Scan Completed\n\n\`\`\`json\n$logs\n\`\`\`"
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$comment\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
