name: Trigger Opsera GitCustodian Scan and Report to GitHub

on:
  workflow_dispatch:
  pull_request:

jobs:
  trigger-opsera-scan:
    runs-on: ubuntu-latest
    outputs:
      run_count: ${{ steps.trigger_scan.outputs.run_count }}
    steps:
      - name: Trigger GitCustodian Scan in Opsera
        id: trigger_scan
        run: |
          response=$(curl -s -X POST "https://app.opsera.io/api/v1/pipeline/run" \
            -H "Authorization: Bearer ${{ secrets.OPSERA_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"pipelineId": "68232d25a85372e8342b3100"}')

          echo "Pipeline Response: $response"

          if echo "$response" | jq . >/dev/null 2>&1; then
            run_count=$(echo "$response" | jq -r '.runCount')
            echo "run_count=$run_count" >> $GITHUB_OUTPUT
          else
            echo "Error: Invalid JSON response. Exiting." >&2
            exit 1
          fi

  fetch-opsera-logs:
    needs: trigger-opsera-scan
    runs-on: ubuntu-latest
    outputs:
      logs: ${{ steps.fetch_logs.outputs.logs }}
    steps:
      - name: Fetch Opsera Scan Logs
        id: fetch_logs
        run: |
          run_count="${{ needs.trigger-opsera-scan.outputs.run_count }}"
          response=$(curl -s -X POST "https://app.opsera.io/api/v1/pipeline/logs" \
            -H "Authorization: Bearer ${{ secrets.OPSERA_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"pipelineId\": \"68232d25a85372e8342b3100\", \"runCount\": \"$run_count\"}")

          echo "Log Response: $response"

          if echo "$response" | jq . >/dev/null 2>&1; then
            logs=$(echo "$response" | jq -c '.logs // []')
            echo "logs=$logs" >> $GITHUB_OUTPUT
          else
            echo "Error: Unable to fetch logs. Exiting." >&2
            exit 1
          fi

  report-scan-result:
    needs: fetch-opsera-logs
    runs-on: ubuntu-latest
    steps:
      - name: Create Detailed Scan Report
        run: |
          logs='${{ needs.fetch-opsera-logs.outputs.logs }}'

          if [ "$logs" = "[]" ]; then
            echo "❌ GitCustodian Scan Failed: No logs available"
            exit 1
          fi

          echo "✅ GitCustodian Scan Completed"
          echo "### GitCustodian Scan Report" > scan-report.md
          echo "Pipeline ID: $GITHUB_RUN_ID" >> scan-report.md
          echo "Scan Status: Completed" >> scan-report.md
          echo "#### Scan Issues:" >> scan-report.md

          echo "$logs" | jq -r '.[] | "- Author: \(.Author)\n  Commit: \(.Commit)\n  CommitHash: \(.CommitHash)\n  Path: \(.Path)\n  LineNumber: \(.LineNumber)\n  Link: \(.Link)\n  Reason: \(.Reason)\n  Severity: \(.Severity)\n  IssueStatus: \(.IssueStatus)\n"' >> scan-report.md

          echo "#### End of Report" >> scan-report.md

      - name: Commit the Scan Report
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch
          git checkout ${{ github.head_ref || github.ref_name }}
          git add scan-report.md
          git commit -m "Add detailed GitCustodian scan report"
          git push

  comment-scan-result:
    needs: fetch-opsera-logs
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Comment on GitHub Pull Request
        run: |
          logs='${{ needs.fetch-opsera-logs.outputs.logs }}'

          if [ "$logs" = "[]" ]; then
            comment_body="❌ GitCustodian Scan Failed: No logs available"
          else
            comment_body="✅ GitCustodian Scan Completed.\n\n<details><summary>Click to expand logs</summary>\n\n\`\`\`json\n$logs\n\`\`\`\n</details>"
          fi

          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$comment_body\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
